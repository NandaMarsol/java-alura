
public class Conta {
	
	// atributos privados só podem ser editados dentro da classe Conta - isso se chama encapsulamento 
	private double saldo; 
	private int agencia;
	private int numero;
	private Cliente titular;
	private static int total = 0; // static quer dizer que é da classe Conta, os outros são da instância
	
	// construtor te obriga a ter os parâmetros definidos numa regra de negócio
	// construtores são utilizados para inicialização dos atributos
	public Conta(int agencia, int numero){
		Conta.total++;
		this.agencia = agencia;
		this.numero = numero;
		this.saldo = 100;
		System.out.println("Estou criando uma conta, agência " + this.agencia + ", número " +this.numero);
	}
	
	// métodos - definem o comportamento de um objeto 
	public void deposita(double valor){
		this.saldo = this.saldo + valor; // o "this" saldo é referente a contaDaFernanda
		// this.saldo += valor;
	}
	
	public boolean saca(double valor){
		if(this.saldo >= valor){
			this.saldo = this.saldo - valor;
			// this.saldo -= valor;
			return true;
		} else {
			return false;
		}
	}
	public boolean transfere(double valor, Conta destino){
		if(this.saldo >= valor){
			this.saldo -= valor;
			destino.deposita(valor);
			return true;
		} else {
			return false;
		}
	}
	
	public double getSaldo() {
		return this.saldo;
	}
	
	public int getNumero(){
		return this.numero;
	}
	
	public void setNumero(int numero){ // int numero é uma variável temporária
		if(numero <= 0) {
			System.out.println("Não pode valor menor que 0");
			return;
		}
		this.numero = numero; // this se refere ao atributo numero
	}
	
	public int getAgencia() {
		return agencia;
	}
	
	public void setAgencia(int agencia) {
		if(agencia <=0){
			System.out.println("Não pode valor menor igual a 0 ");
		}
		this.agencia = agencia;
	}
	
	public Cliente getTitular() {
		return titular;
	}
	
	public void setTitular(Cliente titular) {
		this.titular = titular;
	}
	
	public static int getTotal(){
		return Conta.total;
	}

}
